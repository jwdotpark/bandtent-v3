# .github/workflows/staging.yml
# GitHub Action for Serverless NextJS staging environment

name: bandtent-staging
on:
  push:
    branches: [dev]
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - uses: canastro/copy-file-action@master
        with:
          source: 'serverless-staging.yml'
          target: 'serverless.yml'

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14'

      # - name: env variables
      #   run: |
      #     export S3_UPLOAD_KEY='${{secrets.S3_UPLOAD_KEY}}'
      #     export S3_UPLOAD_SECRET='${{secrets.S3_UPLOAD_SECRET}}'
      #     export S3_UPLOAD_BUCKET='${{secrets.S3_UPLOAD_BUCKET}}'
      #     export S3_UPLOAD_REGION='${{secrets.S3_UPLOAD_REGION}}'
      #     export DATABASE_URL_WITH_SCHEMA='${{secrets.DATABASE_URL_WITH_SCHEMA}}'
      #     export DATABASE_URL='${{secrets.DATABASE_URL}}'
      #     export SHADOW_DATABASE_URL='${{secrets.SHADOW_DATABASE_URL}}'
      #     export EMAIL_SERVER_USER='${{secrets.EMAIL_SERVER_USER}}'
      #     export EMAIL_SERVER_PASSWORD='${{secrets.EMAIL_SERVER_PASSWORD}}'
      #     export EMAIL_SERVER_HOST='${{secrets.EMAIL_SERVER_HOST}}'
      #     export EMAIL_SERVER_PORT='${{secrets.EMAIL_SERVER_PORT}}'
      #     export EMAIL_FROM='${{secrets.EMAIL_FROM}}'
      #     export AUTH_GITHUB_ID='${{secrets.AUTH_GITHUB_ID}}'
      #     export AUTH_GITHUB_SECRET='${{secrets.AUTH_GITHUB_SECRET}}'
      #     export GOOGLE_CLIENT_ID='${{secrets.GOOGLE_CLIENT_ID}}'
      #     export GOOGLE_CLIENT_SECRET='${{secrets.GOOGLE_CLIENT_SECRET}}'
      #     export NEXTAUTH_URL='${{secrets.NEXTAUTH_URL}}'
      #     export NEXTAUTH_URL_INTERNAL='${{secrets.NEXTAUTH_URL_INTERNAL}}'
      #     export SECRET='${{secrets.SECRET}}'
      #     export PRISMA_QUERY_ENGINE_BINARY='${{secrets.PRISMA_QUERY_ENGINE_BINARY}}'

      - name: Install dependencies
        run: yarn install

      # - name: Run tests
      #   run: npm run test:ci

      - name: Serverless AWS authentication
        run: npx serverless --component=serverless-next config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Download `.serverless` state from S3
      #   run: aws s3 sync s3://bhall2001-serverless-state-bucket/your-site-name/staging/.serverless .serverless --delete

      - name: Deploy to AWS
        env:
          S3_UPLOAD_KEY: ${{ secrets.S3_UPLOAD_KEY }}
          S3_UPLOAD_SECRET: ${{ secrets.S3_UPLOAD_SECRET }}
          S3_UPLOAD_BUCKET: ${{ secrets.S3_UPLOAD_BUCKET }}
          S3_UPLOAD_REGION: ${{ secrets.S3_UPLOAD_REGION }}
          DATABASE_URL_WITH_SCHEMA: ${{ secrets.DATABASE_URL_WITH_SCHEMA }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
          EMAIL_SERVER_USER: ${{ secrets.EMAIL_SERVER_USER }}
          EMAIL_SERVER_PASSWORD: ${{ secrets.EMAIL_SERVER_PASSWORD }}
          EMAIL_SERVER_HOST: ${{ secrets.EMAIL_SERVER_HOST }}
          EMAIL_SERVER_PORT: ${{ secrets.EMAIL_SERVER_PORT }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_URL_INTERNAL: ${{ secrets.NEXTAUTH_URL_INTERNAL }}
          SECRET: ${{ secrets.SECRET }}
          PRISMA_QUERY_ENGINE_BINARY: ${{ secrets.PRISMA_QUERY_ENGINE_BINARY }}
        run: echo npx serverless@2.72.2

      - name: Upload `.serverless` state to S3
        run: aws s3 sync .serverless s3://bandtent-staging-servereless-state-bucket/your-site-name/staging/.serverless --delete
