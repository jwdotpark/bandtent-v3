# serverless-production.yml
# production

name: bandtent-production
bandtent-production:
  component: '@sls-next/serverless-component'
  inputs:
    name:
      defaultLambda: bandtent-production
      apiLambda: bandtent-production
    bucketName: bandtent-production
    bucketRegion: eu-central-1
    cloundfront:
      comment: 'bandtent-production'
      # distributionId:
    description: 'Lambda@Edge for bandtent-production'
    publicDirectoryCache: true
    minifyHandlers: true
    build:
      env:
        S3_UPLOAD_KEY: ${env.S3_UPLOAD_KEY}
        S3_UPLOAD_SECRET: ${env.S3_UPLOAD_SECRET}
        S3_UPLOAD_BUCKET: ${env.secrets.S3_UPLOAD_BUCKET}
        S3_UPLOAD_REGION: ${env.S3_UPLOAD_REGION}
        DATABASE_URL_WITH_SCHEMA: ${env.DATABASE_URL_WITH_SCHEMA}
        DATABASE_URL: ${env.DATABASE_URL}
        SHADOW_DATABASE_URL: ${env.SHADOW_DATABASE_URL}
        EMAIL_SERVER_USER: ${env.EMAIL_SERVER_USER}
        EMAIL_SERVER_PASSWORD: ${env.EMAIL_SERVER_PASSWORD}
        EMAIL_SERVER_HOST: ${env.EMAIL_SERVER_HOST}
        EMAIL_SERVER_PORT: ${env.EMAIL_SERVER_PORT}
        EMAIL_FROM: ${env.EMAIL_FROM}
        AUTH_GITHUB_ID: ${env.AUTH_GITHUB_ID}
        AUTH_GITHUB_SECRET: ${env.AUTH_GITHUB_SECRET}
        GOOGLE_CLIENT_ID: ${env.GOOGLE_CLIENT_ID}
        GOOGLE_CLIENT_SECRET: ${env.GOOGLE_CLIENT_SECRET}
        NEXTAUTH_URL: ${env.NEXTAUTH_URL}
        NEXTAUTH_URL_INTERNAL: ${env.NEXTAUTH_URL_INTERNAL}
        SECRET: ${env.SECRET}
        PRISMA_QUERY_ENGINE_BINARY: ${env.PRISMA_QUERY_ENGINE_BINARY}
        NEXT_PUBLIC_API_MOCKING: ${env.NEXT_PUBLIC_API_MOCKING}
      postBuildCommands:
        - echo $S3_UPLOAD_KEY;
        - PDIR=node_modules/.prisma/client/;
          LDIR=.serverless_nextjs/api-lambda/;
          if [ "$(ls -A $LDIR)" ]; then
          mkdir -p $LDIR$PDIR;
          cp "$PDIR"libquery_engine-rhel-openssl-1.0.x.so.node $LDIR$PDIR;
          cp "$PDIR"schema.prisma $LDIR$PDIR;
          fi;
        - PDIR=node_modules/.prisma/client/;
          LDIR=.serverless_nextjs/default-lambda/;
          if [ "$(ls -A $LDIR)" ]; then
          mkdir -p $LDIR$PDIR;
          cp "$PDIR"libquery_engine-rhel-openssl-1.0.x.so.node $LDIR$PDIR;
          cp "$PDIR"schema.prisma $LDIR$PDIR;
          fi;
