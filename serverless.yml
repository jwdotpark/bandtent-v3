# serverless.yml
# local preview deploy

bandtent-preview:
  component: '@sls-next/serverless-component'
  inputs:
    name:
      defaultLambda: bandtent-preview
      apiLambda: bandtent-preview
    bucketName: bandtent-preview
    bucketRegion: eu-central-1
    # useServerlessTraceTarget: true
    cloudfront:
      comment: 'bandtent-preview'
      distributionId: E1K1M8VNSZJGWC
    description: 'Lambda@Edge for bandtent-preview'
    minifyHandlers: true
    build:
      env:
        S3_UPLOAD_KEY: ${env.S3_UPLOAD_KEY}
        S3_UPLOAD_SECRET: ${env.S3_UPLOAD_SECRET}
        S3_UPLOAD_BUCKET: ${env.secrets.S3_UPLOAD_BUCKET}
        S3_UPLOAD_REGION: ${env.S3_UPLOAD_REGION}
        DATABASE_URL_WITH_SCHEMA: ${env.DATABASE_URL_WITH_SCHEMA}
        DATABASE_URL: ${env.DATABASE_URL}
        SHADOW_DATABASE_URL: ${env.SHADOW_DATABASE_URL}
        EMAIL_SERVER_USER: ${env.EMAIL_SERVER_USER}
        EMAIL_SERVER_PASSWORD: ${env.EMAIL_SERVER_PASSWORD}
        EMAIL_SERVER_HOST: ${env.EMAIL_SERVER_HOST}
        EMAIL_SERVER_PORT: ${env.EMAIL_SERVER_PORT}
        EMAIL_FROM: ${env.EMAIL_FROM}
        AUTH_GITHUB_ID: ${env.AUTH_GITHUB_ID}
        AUTH_GITHUB_SECRET: ${env.AUTH_GITHUB_SECRET}
        GOOGLE_CLIENT_ID: ${env.GOOGLE_CLIENT_ID}
        GOOGLE_CLIENT_SECRET: ${env.GOOGLE_CLIENT_SECRET}
        NEXTAUTH_URL: ${env.NEXTAUTH_URL}
        NEXTAUTH_URL_INTERNAL: ${env.NEXTAUTH_URL_INTERNAL}
        SECRET: ${env.SECRET}
        PRISMA_QUERY_ENGINE_BINARY: ${env.PRISMA_QUERY_ENGINE_BINARY}
        NEXT_PUBLIC_API_MOCKING: ${env.NEXT_PUBLIC_API_MOCKING}
      postBuildCommands:
        - PDIR=node_modules/.prisma/client/;
          LDIR=.serverless_nextjs/api-lambda/;
          if [ "$(ls -A $LDIR)" ]; then
          mkdir -p $LDIR$PDIR;
          cp "$PDIR"libquery_engine-rhel-openssl-1.0.x.so.node $LDIR$PDIR;
          cp "$PDIR"schema.prisma $LDIR$PDIR;
          fi;
        - PDIR=node_modules/.prisma/client/;
          LDIR=.serverless_nextjs/default-lambda/;
          if [ "$(ls -A $LDIR)" ]; then
          mkdir -p $LDIR$PDIR;
          cp "$PDIR"libquery_engine-rhel-openssl-1.0.x.so.node $LDIR$PDIR;
          cp "$PDIR"schema.prisma $LDIR$PDIR;
          fi;
        # - echo "S3_UPLOAD_KEY=$S3_UPLOAD_KEY" >> .env
        # - echo "S3_UPLOAD_SECRET=$S3_UPLOAD_SECRET" >> .env
        # - echo "S3_UPLOAD_BUCKET=$S3_UPLOAD_BUCKET" >> .env
        # - echo "S3_UPLOAD_REGION=$S3_UPLOAD_REGION" >> .env
        # - echo "DATABASE_URL_WITH_SCHEMA=$DATABASE_URL_WITH_SCHEMA" >> .env
        # - echo "DATABASE_URL=$DATABASE_URL" >> .env
        # - echo "SHADOW_DATABASE_URL=$SHADOW_DATABASE_URL" >> .env
        # - echo "EMAIL_SERVER_USER=$EMAIL_SERVER_USER" >> .env
        # - echo "EMAIL_SERVER_PASSWORD=$EMAIL_SERVER_PASSWORD" >> .env
        # - echo "EMAIL_SERVER_HOST=$EMAIL_SERVER_HOST" >> .env
        # - echo "EMAIL_SERVER_PORT=$EMAIL_SERVER_PORT" >> .env
        # - echo "EMAIL_FROM=$EMAIL_FROM" >> .env
        # - echo "AUTH_GITHUB_ID=$AUTH_GITHUB_ID" >> .env
        # - echo "AUTH_GITHUB_SECRET=$AUTH_GITHUB_SECRET" >> .env
        # - echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
        # - echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
        # - echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env
        # - echo "EMAIL_FROM=$EMAIL_FROM" >> .env
        # - echo "NEXTAUTH_URL_INTERNAL=$NEXTAUTH_URL_INTERNAL" >> .env
        # - echo "SECRET=$SECRET" >> .env
        # - echo "PRISMA_QUERY_ENGINE_BINARY=$PRISMA_QUERY_ENGINE_BINARY" >> .env
        # - cat .env
